# A workflow that deploys the website to new branch and create a PR to gh-pages branch for every PR
name: Update documentation

on:
  # Run for PR to master changing doc files
  pull_request:
    branches:
      - master
    paths:
      - '**/*.md'
  # Run for every new release
  release:
    types: [released]
  repository_dispatch:
    types: [gh-pages]

jobs:
  gh-page-sync:
    runs-on: ubuntu-latest
    env:
      PAGES_BRANCH: gh-pages
      EVENT_NAME: ${{ github.event_name }}
      PR_BRANCH: ${{ github.head_ref }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Declare Version Variables
        id: vars
        shell: bash
        run: |
          if [[ "$EVENT_NAME" = "pull_request" ]]; then \
            echo "##[set-output name=deploy_branch;]docs/$PR_BRANCH"; \
          else \
            echo "##[set-output name=deploy_branch;]$PAGES_BRANCH"; \
          fi
          echo "##[set-output name=pr;]$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')"
      - name: Setup Python
        uses: actions/setup-python@v2
      - name: Pip Installer
        uses: BSFishy/pip-action@v1
        with:
          packages: |
            mkdocs-material
            mkdocs-minify-plugin
      - name: Generate API Docs
        run: |
          ./gradlew dokkaHtmlMultiModule
      - name: use "gh-pages" branch as base
        uses: repo-sync/github-sync@v2
        if: ${{ steps.vars.outputs.deploy_branch }} != ${{ env.PAGES_BRANCH }}
        with:
          source_repo: ${{ github.repository }}
          source_branch: ${{ env.PAGES_BRANCH }}
          destination_branch: ${{ steps.vars.outputs.deploy_branch }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy Website
        run: |
          cp README.md docs/index.md
          cp CHANGELOG.md docs/changelog.md
          mkdir -p docs/sample && cp sample/README.md docs/sample/index.md
          mkdir -p docs/ergo-annotations && cp ergo-annotations/README.md docs/ergo-annotations/index.md
          mkdir -p docs/ergo-processor && cp ergo-processor/README.md docs/ergo-processor/index.md
          mkdir -p docs/ergo-runtime && cp ergo-runtime/README.md docs/ergo-runtime/index.md
          mkdir -p docs/ergo-service-sqs && cp ergo-service-sqs/README.md docs/ergo-service-sqs/index.md
          mkdocs gh-deploy -b ${{ steps.vars.outputs.deploy_branch }}
      # Commit changes and create a PR if source event is PR
      - name: Create a PR
        uses: repo-sync/pull-request@v2.3
        if: ${{ steps.vars.outputs.deploy_branch }} != ${{ env.PAGES_BRANCH }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ steps.vars.outputs.deploy_branch }}
          destination_branch: ${{ env.PAGES_BRANCH }}
          pr_title: 'docs: Update docs for PR #${{ steps.vars.outputs.pr }}'
          pr_body: |
            Updated GitHub pages with latest from `./gradlew dokkaHtmlMultiModule`.

            ---

            Source PR: #${{ steps.vars.outputs.pr }}
          pr_label: documentation,bot
          pr_assignee: ${{ github.actor }}
